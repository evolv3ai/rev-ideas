version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: ideabrowser-postgres
    environment:
      POSTGRES_DB: ideabrowser
      POSTGRES_USER: ideabrowser
      POSTGRES_PASSWORD: ideabrowser_secret
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ideabrowser-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ideabrowser"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Queue
  redis:
    image: redis:6-alpine
    container_name: ideabrowser-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ideabrowser-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Weaviate Vector Database for semantic search
  weaviate:
    image: semitechnologies/weaviate:latest
    container_name: ideabrowser-weaviate
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'text2vec-openai'
      ENABLE_MODULES: 'text2vec-openai'
      OPENAI_APIKEY: ${OPENAI_API_KEY}
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - ideabrowser-network
    restart: unless-stopped

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ideabrowser-backend
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/workspace/backend
      - ./ideabrowser.prd.md:/workspace/ideabrowser.prd.md:ro
      - ./AGENTS.md:/workspace/AGENTS.md:ro
    environment:
      DATABASE_URL: postgresql://ideabrowser:ideabrowser_secret@postgres:5432/ideabrowser
      REDIS_URL: redis://redis:6379
      VECTOR_DB_URL: http://weaviate:8080
      PYTHONUNBUFFERED: 1
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      GOOGLE_TRENDS_API_KEY: ${GOOGLE_TRENDS_API_KEY}
      REDDIT_CLIENT_ID: ${REDDIT_CLIENT_ID}
      REDDIT_CLIENT_SECRET: ${REDDIT_CLIENT_SECRET}
      GOOGLE_CLOUD_API_KEY: ${GOOGLE_CLOUD_API_KEY}
    depends_on:
      - postgres
      - redis
      - weaviate
    networks:
      - ideabrowser-network
    restart: unless-stopped

  # Celery Worker for Background Tasks
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ideabrowser-celery
    command: celery -A tasks.celery worker --loglevel=info --concurrency=4
    volumes:
      - ./backend:/workspace/backend
    environment:
      DATABASE_URL: postgresql://ideabrowser:ideabrowser_secret@postgres:5432/ideabrowser
      REDIS_URL: redis://redis:6379
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      GOOGLE_TRENDS_API_KEY: ${GOOGLE_TRENDS_API_KEY}
      REDDIT_CLIENT_ID: ${REDDIT_CLIENT_ID}
      REDDIT_CLIENT_SECRET: ${REDDIT_CLIENT_SECRET}
    depends_on:
      - postgres
      - redis
    networks:
      - ideabrowser-network
    restart: unless-stopped

  # Celery Beat for Scheduled Tasks (Daily Ideas, Trend Updates)
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ideabrowser-celery-beat
    command: celery -A tasks.celery beat --loglevel=info
    volumes:
      - ./backend:/workspace/backend
    environment:
      DATABASE_URL: postgresql://ideabrowser:ideabrowser_secret@postgres:5432/ideabrowser
      REDIS_URL: redis://redis:6379
      CELERY_BROKER_URL: redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - ideabrowser-network
    restart: unless-stopped

  # Frontend Next.js Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ideabrowser-frontend
    command: npm run dev
    working_dir: /workspace/frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/workspace/frontend
      - /workspace/frontend/node_modules
      - /workspace/frontend/.next
    environment:
      NEXT_PUBLIC_API_URL: http://backend:8000
      NEXT_PUBLIC_ENABLE_VOICE: true
      NODE_ENV: development
    depends_on:
      - backend
    networks:
      - ideabrowser-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: ideabrowser-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - ideabrowser-network
    profiles:
      - production

  # Flower for Celery Monitoring (Development)
  flower:
    image: mher/flower:latest
    container_name: ideabrowser-flower
    command: celery -A tasks.celery flower
    ports:
      - "5555:5555"
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - redis
      - celery
    networks:
      - ideabrowser-network
    profiles:
      - dev

networks:
  ideabrowser-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  weaviate_data:
